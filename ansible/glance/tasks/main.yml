---
# tasks file for glance
- name: Create a new database with name 'glance'
  community.mysql.mysql_db:
    name: glance
    login_unix_socket: "{{ mysql_socket_path }}"
    state: present
  register: mysql_db_output

- name: Cretae MySQL Glance user and password using socket
  community.mysql.mysql_user:
    name: glance
    host: '%'
    password: "{{ mariadb_glance_password }}"
    priv:
      'glance.*': 'ALL,GRANT'
    login_unix_socket: "{{ mysql_socket_path }}"
    state: present

- name: Install required packages
  ansible.builtin.apt:
    name:
      - glance
    state: present
  register: install_glance_output

- name: Copy glance-api configuration file to controller node
  ansible.builtin.template:
    src: glance-api.j2
    dest: /etc/glance/glance-api.conf
    owner: root
    group: root
    mode: '0644'
  notify: Restart Glance API

- name: Create the service credentials
  ansible.builtin.shell: | 
    . /root/.bashrc 
    openstack user create --domain default --password {{ mariadb_glance_password }} glance 
    openstack role add --project admin --user glance admin
    openstack service create --name glance --description "OpenStack Image" image
  args:
    executable: /bin/sh
  when: install_glance_output.changed|bool == true

- name: Create the Image service API endpoints
  ansible.builtin.shell: |
    . /root/.bashrc
    openstack endpoint create --region RegionOne image public http://controller:9292
    openstack endpoint create --region RegionOne image internal http://controller:9292
    openstack endpoint create --region RegionOne image admin http://controller:9292
  args:
    executable: /bin/sh
  when: install_glance_output.changed|bool == true

- name: Populate the Image service database
  ansible.builtin.command: su -s /bin/sh -c "glance-manage db_sync" glance
  when: mysql_db_output.changed|bool == true and install_glance_output.changed|bool == true

#- name: Register quota limits
#  ansible.builtin.shell: |
#    . /root/.bashrc
#    openstack --os-cloud devstack-system-admin registered limit create --service glance --default-limit 1000 --region RegionOne image_size_total
#    openstack --os-cloud devstack-system-admin registered limit create --service glance --default-limit 1000 --region RegionOne image_stage_total
#    openstack --os-cloud devstack-system-admin registered limit create --service glance --default-limit 100 --region RegionOne image_count_total
#    openstack --os-cloud devstack-system-admin registered limit create --service glance --default-limit 100 --region RegionOne image_count_uploading
#  args:
#    executable: /bin/sh
#  when: install_glance_output.changed|bool == true
#
# openstack catalog list ; openstack service list ; openstack endpoint list
